openapi: 3.0.3
info:
  title: GHARIB
  version: 0.0.0
paths:
  /api/block-brother/{user_id}/:
    post:
      operationId: api_block_brother_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/delete-brother/{user_id}/:
    post:
      operationId: api_delete_brother_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/delete/{user_id}/:
    delete:
      operationId: delete_user_account
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/list-blocked/:
    get:
      operationId: get_blocked_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brotherDataSer'
          description: ''
  /api/list-brother/:
    get:
      operationId: get_user_brother_list
      summary: get brother list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/mutual-brother/{user_id}/:
    get:
      operationId: get_mutual_brothers
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brotherDataSer'
          description: ''
  /api/refreshtoken/:
    post:
      operationId: api_refreshtoken_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/retreive-all/:
    get:
      operationId: get_user_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/retreive/{user_id}/:
    get:
      operationId: get_user_list_2
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/signup/:
    post:
      operationId: create_user_account
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/update/:
    post:
      operationId: update_user
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brotherDataSer'
          description: ''
  /khatma/add-member-group/{group_id}/:
    post:
      operationId: khatma_add_member_group_create
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /khatma/auth/:
    get:
      operationId: khatma_auth_retrieve
      description: |-
        get:
            API view for retrieving ticket to connect to websocket .
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /khatma/create-khatma/:
    get:
      operationId: khatma_create_khatma_retrieve
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    post:
      operationId: khatma_create_khatma_create
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    put:
      operationId: khatma_create_khatma_update
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    patch:
      operationId: khatma_create_khatma_partial_update
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    delete:
      operationId: khatma_create_khatma_destroy
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /khatma/group/:
    get:
      operationId: khatma_group_retrieve
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: khatma_group_create
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: khatma_group_destroy
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /khatma/group-settings/{id}/:
    get:
      operationId: khatma_group_settings_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupSettings'
          description: ''
    post:
      operationId: khatma_group_settings_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/groupSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/groupSettings'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSettings'
          description: ''
    put:
      operationId: khatma_group_settings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/groupSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/groupSettings'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSettings'
          description: ''
    patch:
      operationId: khatma_group_settings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedgroupSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedgroupSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedgroupSettings'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSettings'
          description: ''
  /khatma/khatma-membership/{id}/:
    get:
      operationId: khatma_khatma_membership_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/khatma_memb'
          description: ''
    post:
      operationId: khatma_khatma_membership_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma_memb'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    put:
      operationId: khatma_khatma_membership_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma_memb'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    patch:
      operationId: khatma_khatma_membership_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    delete:
      operationId: khatma_khatma_membership_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /khatma/khatma/{id}/:
    get:
      operationId: khatma_khatma_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    post:
      operationId: khatma_khatma_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    put:
      operationId: khatma_khatma_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    patch:
      operationId: khatma_khatma_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedkhatma'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma'
          description: ''
    delete:
      operationId: khatma_khatma_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /khatma/list-khatma-membership/:
    get:
      operationId: khatma_list_khatma_membership_list
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/khatma_memb'
          description: ''
    post:
      operationId: khatma_list_khatma_membership_create
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma_memb'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    put:
      operationId: khatma_list_khatma_membership_update
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/khatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/khatma_memb'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    patch:
      operationId: khatma_list_khatma_membership_partial_update
      tags:
      - khatma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedkhatma_memb'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/khatma_memb'
          description: ''
    delete:
      operationId: khatma_list_khatma_membership_destroy
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /khatma/list-khatma/{group_id}/:
    get:
      operationId: khatma_list_khatma_retrieve
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - khatma
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notification/accept-br-req/{id}/:
    post:
      operationId: notification_accept_br_req_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notification/accept-join-req/<int:sender_id/:
    post:
      operationId: notification_accept_join_req_<int:sender_id_create
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notification/deny-br-req/{id}/:
    post:
      operationId: notification_deny_br_req_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notification/list-br-req/:
    get:
      operationId: notification_list_br_req_retrieve
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brotherDataSer'
          description: ''
  /notification/send-br-req/{id}/:
    post:
      operationId: notification_send_br_req_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notification/send-join-req/{community_id}/:
    post:
      operationId: notification_send_join_req_create
      parameters:
      - in: path
        name: community_id
        schema:
          type: integer
        required: true
      tags:
      - notification
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    CanAddMemberEnum:
      enum:
      - all
      - only_admins
      - custom
      type: string
      description: |-
        * `all` - all
        * `only_admins` - only_admins
        * `custom` - custom
    CanSendMessageEnum:
      enum:
      - all
      - only_admins
      - custom
      type: string
      description: |-
        * `all` - all
        * `only_admins` - only_admins
        * `custom` - custom
    CountryEnum:
      enum:
      - Algeria
      type: string
      description: '* `Algeria` - DZ'
    CurrentSurahEnum:
      enum:
      - the cow
      type: string
      description: '* `the cow` - the cow'
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - M
        * `female` - F
    PatchedgroupSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        canAddMember:
          $ref: '#/components/schemas/CanAddMemberEnum'
        canSendMessage:
          $ref: '#/components/schemas/CanSendMessageEnum'
        All_can_launch_khatma:
          type: boolean
        group:
          type: integer
        canAddMember_custom:
          type: array
          items:
            type: integer
            title: CanAddMember custom
        canSendMessage_custom:
          type: array
          items:
            type: integer
            title: CanSendMessage custom
    Patchedkhatma:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        endDate:
          type: string
          format: date-time
        intentions:
          type: string
          maxLength: 180
        duaa:
          type: string
          maxLength: 180
        startSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        startVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        endSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        endVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        progress:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        launcher:
          type: integer
          nullable: true
        group:
          type: integer
    Patchedkhatma_memb:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        startShareSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        startShareVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        endShareSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        endShareVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        currentSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        currentVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        progress:
          type: integer
          maximum: 2147483647
          minimum: 0
        finishDate:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        groupMembership:
          type: integer
        khatma:
          type: integer
    StatusEnum:
      enum:
      - ongoing
      - completed
      - aborted
      type: string
      description: |-
        * `ongoing` - ongoing
        * `completed` - completed
        * `aborted` - aborted
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        fullname:
          type: string
          maxLength: 30
        username:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        gender:
          $ref: '#/components/schemas/GenderEnum'
        country:
          $ref: '#/components/schemas/CountryEnum'
        profilePic:
          type: string
          format: uri
        date_joined:
          type: string
          format: date-time
      required:
      - id
      - password
    brotherDataSer:
      type: object
      properties:
        id:
          type: integer
        img:
          type: string
          format: uri
        username:
          type: string
          maxLength: 20
      required:
      - id
      - img
      - username
    groupSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        canAddMember:
          $ref: '#/components/schemas/CanAddMemberEnum'
        canSendMessage:
          $ref: '#/components/schemas/CanSendMessageEnum'
        All_can_launch_khatma:
          type: boolean
        group:
          type: integer
        canAddMember_custom:
          type: array
          items:
            type: integer
            title: CanAddMember custom
        canSendMessage_custom:
          type: array
          items:
            type: integer
            title: CanSendMessage custom
      required:
      - canAddMember_custom
      - canSendMessage_custom
      - group
      - id
    khatma:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        endDate:
          type: string
          format: date-time
        intentions:
          type: string
          maxLength: 180
        duaa:
          type: string
          maxLength: 180
        startSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        startVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        endSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        endVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        progress:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        launcher:
          type: integer
          nullable: true
        group:
          type: integer
      required:
      - created_at
      - endDate
      - endSurah
      - id
      - name
      - startSurah
      - status
    khatma_memb:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        startShareSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        startShareVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        endShareSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        endShareVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        currentSurah:
          $ref: '#/components/schemas/CurrentSurahEnum'
        currentVerse:
          type: integer
          maximum: 2147483647
          minimum: 0
        progress:
          type: integer
          maximum: 2147483647
          minimum: 0
        finishDate:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        groupMembership:
          type: integer
        khatma:
          type: integer
      required:
      - currentSurah
      - endShareSurah
      - groupMembership
      - id
      - startShareSurah
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
